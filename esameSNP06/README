Per realizzare la condivisione della memoria tra i due processi è stato scelto di usare la condivisione di memoria offerta da System V, questo perchè ci da la possibilità di mettere in comunicazione due processi che non sono "imparentati" e mediante l'uso della chiamata shmctl con il comando IPC_STAT possiamo ottenere delle informazioni su chi ha creato la memoria condivisa (shm_cpid) e sull'ultimo processo ad averla usata (shm_lpid). Usando queste due informazioni si può instaurare un meccanismo di sincronizzazione basato sui segnali SIGUSR1 e SIGUSR2 per evitare race conditions nell'accesso alla memoria. Un processo che vuole scrivere invierà SIGUSR1 all'altro processo che rimmarrà in attesa di SIGUSR2 prima di riprendere le sue operazioni. Una volta che il processo che sta scrivendo ha terminato le sue operazioni invierà SIGUSR2 al processo in attesa per comunicare di aver finito il suo lavoro.
Entrambi i processi bloccheranno inizialmente tutti i segnali e avvieranno la thread_signal_handler per poter gestire poi i segnali che verranno consegnati al processo.

Compilare tramite make ed eseguire su due terminali proc1 e proc2 (nota lanciare prima proc1)
